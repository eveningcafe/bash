---

- name:  Create backup information security directory
  file:
    path: /root/BACKUP_CONFIG_FIX_ATTT
    state: directory

- name: Backup
  copy:
    src: "{{ item }}"
    dest: /root/BACKUP_CONFIG_FIX_ATTT/
    remote_src: yes
  with_items:
    - /etc/passwd
    - /etc/ssh/sshd_config
    - /etc/profile
    - /etc/login.defs
    - /etc/logrotate.d/rsyslog
    - /etc/logrotate.conf
    - /etc/rsyslog.conf

- name: Fix logrotate
  shell: |
    mv /etc/logrotate.d/ceph-common /root/BACKUP_CONFIG_FIX_ATTT/
    mv /etc/logrotate.d/nova-common /root/BACKUP_CONFIG_FIX_ATTT/ 
  ignore_errors: yes

- name: Save pamd.d and iptables rules
  shell: |
    cp -r /etc/pam.d/ /root/BACKUP_CONFIG_FIX_ATTT/pam.d.{{ ansible_date_time.date }}
    iptables-save > /root/BACKUP_CONFIG_FIX_ATTT/iptables.rules.{{ ansible_date_time.date }}

- name: Install libpam 
  apt:
    name: libpam-pwquality 
    state: present

- name: Pam config
  template: src=etc.pam.d.common-password.j2 dest=/etc/pam.d/common-password backup=yes

- name: Set pass max day
  lineinfile:
    path: /etc/login.defs 
    regexp: '^PASS_MAX_DAYS\s'
    line: 'PASS_MAX_DAYS   90'

- name: Set password expire time
  shell: |
    chage -M 90 {{ item }}
  with_items: "{{ baseline.users }}"
  ignore_errors: yes

- name: Fix timeout  
  lineinfile:
    path: /etc/profile
    regexp: '{{ item }}'
    line: '{{ item }}'
  with_items:
    - "TMOUT={{ profile.timeout }}"
    - "readonly TMOUT"
    - "export TMOUT"

- name: Fix crontab
  shell: |
    for user in $(cut -f1 -d: /etc/passwd); do crontab -u $user -l; done
  ignore_errors: yes

- name: Hardening 
  file:
    path: /etc/cron.deny 
    state: absent
  ignore_errors: yes

- name: Create crontab.allow
  file:
    path: /etc/cron.allow
    state: touch
    owner: root 
    group: root 
    mode: 0600 

- name: Contab.allow content
  lineinfile:
    path: /etc/cron.allow
    regexp: '{{ item }}'
    line: '{{ item }}'
  with_items:
    - root 

- name: Set crontab permission
  file:
    path: "{{ item }}" 
    owner: root 
    group: root 
    mode: "g-rwx,o-rwx"
  with_items:
    - /etc/cron.hourly
    - /etc/cron.daily 
    - /etc/cron.weekly 
    - /etc/cron.monthly 
    - /etc/cron.d 
    - /etc/cron.allow

- name: Config log rotate 
  template: src=etc.logrotate.conf.j2 dest=/etc/logrotate.conf backup=yes

- name: Config log rotated 
  template: src=etc.logrotate.d.rsyslog.j2 dest=/etc/logrotate.d/rsyslog backup=yes

- name: Config rsyslog 
  template: src=etc.rsyslog.conf.j2 dest=/etc/rsyslog.conf backup=yes

- name: Restart rsyslog
  shell: |
    /etc/init.d/rsyslog restart

- name: Config SSH
  template: src=etc.ssh.sshd_config.j2 dest=/etc/ssh/sshd_config backup=yes 

- name: Restart ssh
  shell: |
   /etc/init.d/ssh restart

- name: Config dns resolver 
  template: src=etc.resolv.conf.j2 dest=/etc/resolv.conf backup=yes

- name: Config iptables 
  template: src=etc.iptables.startup.sh.j2 dest=/etc/iptables.startup.sh mode=0755 backup=yes

- name: Apply iptables rules
  shell:
    /etc/iptables.startup.sh

- name: Config rc.local
  lineinfile:
    path: /etc/rc.local 
    regexp: '/bin/bash /etc/iptables.startup.sh'
    insertbefore: '^exit 0'
    line: '/bin/bash /etc/iptables.startup.sh'

- name: Fix NTP
  template: src=etc.ntp.conf.j2 dest=/etc/ntp.conf backup=yes
