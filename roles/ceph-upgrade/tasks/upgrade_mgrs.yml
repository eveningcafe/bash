- name: "rename docker mgr to ceph_mgr.backup.{{ceph_current_version}}"
  command: "docker container rename {{mgr_name}} {{mgr_name}}.backup.{{ceph_current_version}}"

- name: "prevent backup container from starting automatically"
  command: "docker update --restart=no {{mgr_name}}.backup.{{ceph_current_version}}"

- name: stop mgr
  command: "docker stop {{mgr_name}}.backup.{{ceph_current_version}}"
  
- name: get localtion new image version
  set_fact:
    image_address: "{{docker_reg_host}}:{{docker_reg_port}}/{{ ceph_docker_image }}:{{ ceph_new_version }}"
  when: docker_use_local_registry

- name: get localtion new image version
  set_fact:
    image_address: "{{ ceph_docker_image }}:{{ ceph_new_version }}"
  when: not docker_use_local_registry

- name: run new container version
  docker_container:
    name: "{{ mgr_name }}"
    state: started
    image: "{{ image_address }}"
    volumes:
      - /var/lib/ceph/:/var/lib/ceph/
      - /etc/localtime:/etc/localtime
      - /var/log/ceph:/var/log/ceph
    env:
      CEPH_PUBLIC_NETWORK: "{{ ceph_public_network }}"
      KV_TYPE: "{{ kv_type }}"
      KV_IP: "{{ kv_endpoint }}"
      KV_PORT: "{{kv_port}}"
    network_mode: host
    command: mgr
    restart_policy: unless-stopped


# Pause for 1 minutes to wait mgr run stable
- pause:
    minutes: 1

- name: prepare admin key for mgr so it can check all status cluster
  uri:
    url: "http://{{kv_endpoint}}:{{kv_port}}/v2/keys/ceph-config/ceph/adminKeyring"
    return_content: yes
  register: this_key

- shell: "echo {{this_key.json.node.value|replace('\t',' ')|replace('\n',' ')}} | awk '{ print $4 }'"
  register: results
  
- set_fact:
    adminKey: "{{results.stdout}}"

- template:
    src: client.admin.keyring.j2
    dest: /tmp/client.admin.keyring
    owner: root
    group: root
    mode: '0660'
    backup: yes
  
- name: "copy admin key to {{mgr_name}}"
  shell: "docker cp /tmp/client.admin.keyring {{mgr_name}}:/etc/ceph/ceph.client.admin.keyring"
  
#check mgr
- name: check has active mgr
  shell: "timeout 5 docker exec {{mgr_name}} ceph -s | grep 'mgr:'" 
  changed_when: false
  register: check_mgr
  failed_when: false
  until: check_mgr.rc == 0 and not (check_mgr.stdout is search('no daemons active') or check_mgr.stdout is search('starting'))
  retries: "{{retries_mgr}}"
  delay: "{{delay_retries_mgr}}"  
  
- name: end execution
  fail:
    msg: "Upgrade mgr fail. run ' ansible-playbook ceph-rollback-all.yml ' to rollback all"
  when: check_mgr.stdout is defined and (check_mgr.stdout is search('no daemons active') or check_mgr.stdout is search('starting'))

# check health
- name: check heath_status
  shell: "timeout 5 docker exec {{mgr_name}} ceph health"
  register: check_health
  
- debug:
    msg: "Heath ok, next step~!"
  when: check_health.stdout=="HEALTH_OK"
  
- debug:
    msg: "Heath warning, be careful~!"
  when: not (check_health.stdout is search('HEALTH_OK'))
  
- name: call fail because health not ok
  fail:
    msg: "Upgrade mon fail cause health not ok . run ' ansible-playbook ceph-rollback-all.yml ' to rollback all OR ' ansible-playbook ceph-rollback-mgrs.yml ' to rollback mgr "
  when: strict_heath_ok_condition and not (check_health.stdout is search('HEALTH_OK'))
