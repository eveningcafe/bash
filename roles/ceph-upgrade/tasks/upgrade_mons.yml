- name: berofe upgrade get list current quorum
  shell: "timeout 5 docker exec {{mon_name}} ceph -s | grep 'mon:'| awk '{ print $5}' " 
  register: quorum_before
  
# - debug: msg="current quorum is {{item}}"
#   with_items: "{{quorum_before.stdout.split(',')}}"
  
- name: "rename docker mon to ceph_mon.backup.{{ceph_current_version}}"
  command: "docker container rename {{mon_name}} {{mon_name}}.backup.{{ceph_current_version}}"

- name: prevent backup container from starting automatically
  command: "docker update --restart=no {{mon_name}}.backup.{{ceph_current_version}}"
  
- name: stop mon
  command: "docker stop {{mon_name}}.backup.{{ceph_current_version}}"
  
- name: get localtion new container version
  set_fact:
    image_address: "{{docker_reg_host}}:{{docker_reg_port}}/{{ ceph_docker_image }}:{{ ceph_new_version }}"
  when: docker_use_local_registry

- name: get localtion new container version
  set_fact:
    image_address: "{{ ceph_docker_image }}:{{ ceph_new_version }}"
  when: not docker_use_local_registry

- name: run new container version
  docker_container:
    name: "{{ mon_name }}"
    state: started
    command: mon
    network_mode: host
    restart_policy: unless-stopped
    volumes: 
      - /var/lib/ceph:/var/lib/ceph
      - /etc/localtime:/etc/localtime
      - /var/run/ceph:/var/run/ceph 
      - /var/log/ceph:/var/log/ceph
    env:
      MON_IP: "{{ mon_ip }}"
      KV_TYPE: "{{ kv_type }}"
      KV_IP: "{{kv_endpoint}}"
      KV_PORT: "{{kv_port}}"
      CEPH_PUBLIC_NETWORK: "{{ ceph_public_network }}"
    image: "{{image_address}}"

#check mon
- name: check mon is up
  shell: "timeout 5 docker exec {{mon_name}} ceph -s | grep 'mon:'| awk '{ print $5}' | grep {{ansible_hostname}}" 
  changed_when: false
  register: check_mon
  failed_when: false
  until: check_mon.rc == 0
  retries: "{{retries_mon}}"
  delay: "{{delay_retries_mon}}"
  
- fail:
    msg: "Upgrade mon fail. run ' ansible-playbook ceph-rollback-all.yml ' to rollback all OR ' ansible-playbook ceph-rollback-mons.yml ' to rollback mon"
  when: check_mon.stdout is defined and check_mon.rc == 1
  
- name: keep going
  debug: 
    msg: "monitor in {{inventory_hostname}} is up, in quorum"
  when: check_mon.stdout is defined and check_mon.rc != 1

#update mon-map
- name: update mon map
  command: "docker exec {{mon_name}} ceph mon getmap -o /etc/ceph/monmap-ceph"
#   changed_when: false
#   register: check_monmap
#   failed_when: false
#   until: check_monmap.rc == 0
#   retries: "{{retries_mon}}"
#   delay: "{{delay_retries_mon}}"
  
# pause
- name: pause 1 min, wait for mon run stable, then we will verify cluster quorum
  pause:
    minutes: 1
    
# check all mon
- name: check all mon in quorum
  include_role:
    name: ceph-upgrade
    tasks_from: verify_quorum
  vars: 
    listhost: "{{ item }}"
  loop: "{{quorum_before.stdout.split(',')}}"

# check health
- name: check heath_status
  shell: "timeout 5 docker exec {{mon_name}} ceph health"
  register: check_health
  
- debug:
    msg: "Heath ok, next step"
  when: check_health.stdout=="HEALTH_OK"
  
- debug:
    msg: "Heath warning, becareful~!"
  when: not (check_health.stdout is search('HEALTH_OK'))
  
- name: call fail because health not ok
  fail:
    msg: "Upgrade mon fail cause health not ok . run ' ansible-playbook ceph-rollback-all.yml ' to rollback all OR ' ansible-playbook ceph-rollback-mons.yml ' to rollback mon "
  when: strict_heath_ok_condition and not (check_health.stdout is search('HEALTH_OK'))
