---

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/cinder/"
    state: directory

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/cinder/{{ item }}/"
    state: directory
  with_items:
    - backup
    - cinder
    - ceph
    - sudoers.d
    - apache2
    - ssl

- name: Get list server's IPs
  set_fact: ips=["{{ groups['volume'] | map('extract', hostvars, ['ansible_ssh_host']) | join('", "') }}"]

- name: Get list hostnames
  set_fact: hostnames="{{ groups['volume'] }}"

- name: Create dict with hostname and correspond IP
  set_fact: hosts={{ ips | get_hosts(hostnames) }}

- name: Config cinder
  template: src=cinder.conf.ceph.controller.j2 dest="{{ docker_shared_conf_dir }}/cinder/cinder/cinder.conf" backup=yes
  when: cinder_env.SSL_ENABLED == 0

- name: Config cinder
  template: src=ssl.cinder.conf.ceph.controller.j2 dest="{{ docker_shared_conf_dir }}/cinder/cinder/cinder.conf" backup=yes
  when: cinder_env.SSL_ENABLED == 1

- name: Config cinder-wsgi
  template: src=cinder-wsgi.conf.j2 dest="{{ docker_shared_conf_dir }}/cinder/apache2/cinder-wsgi.conf" backup=yes

- name: Config ceph as backend storage for cinder 
  include_role:
    name: cinder 
    tasks_from: ceph
  when: ceph.cinder.enabled == 1

- name: Distribute certs
  copy: src="{{ playbook_dir }}/roles/openstack-client/files/{{ item }}" dest="{{ docker_shared_conf_dir }}/cinder/ssl/{{ item }}" backup=yes
  with_items:
    - openstack.crt
    - openstack.key
  when: cinder_env.SSL_ENABLED == 1
