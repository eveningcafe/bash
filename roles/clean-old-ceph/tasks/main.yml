---

- name: clean docker mon
  docker_container:
    name: "{{mon_name}}"
    state: absent
  when: "'ceph_mon' in group_names and clean_old_ceph"
  
- name: remove key in etcd
  command: "curl http://{{ vip.etcd.ip }}:2379/v2/keys/ceph-config?recursive=true -XDELETE"
  when: "'ceph_mon' in group_names and clean_old_ceph"
  run_once: true

- name: clean docker mgr
  docker_container:
    name: "{{mgr_name}}"
    state: absent
  when: "'ceph_mgr' in group_names and clean_old_ceph"

- name: clean docker osd
  when: (
        'ceph_osd' in group_names
        and osd_nodes is defined
        and clean_old_ceph
        )
  docker_container:
    name: "{{item.name}}"
    state: absent
  loop: "{{ osd_nodes }}"
  
- name: clean docker mds
  docker_container:
    name: "{{mds_name}}"
    state: absent
  when: "'ceph_mds' in group_names and mds_name is defined and clean_old_ceph"

- name: get list backup container
  shell: |
    docker ps -a | grep backup | grep ceph| awk '{print $NF}'
  register: result_container_backup
  
- name: clean ceph backup container
  docker_container:
    name: "{{item}}"
    state: absent
  loop: "{{ result_container_backup.stdout_lines }}"
  
- name: Set docker_registry_address
  set_fact:
    image_address: "{{docker_reg_host}}:{{docker_reg_port}}/{{ ceph_docker_image }}:{{ ceph_docker_image_tag }}"
  when: docker_use_local_registry and clean_old_ceph

- name: Set docker_registry_address
  set_fact:
    image_address: "{{ ceph_docker_image }}:{{ ceph_docker_image_tag }}"
  when: not docker_use_local_registry and clean_old_ceph
  
- name: zap devices
  when: ( 
         'ceph_osd' in group_names
         and device_prepare is defined
         and clean_old_ceph
        )
  docker_container:
    name: "ceph_zap_{{ item.name }}"
    state: started
    image: "{{ image_address }}"
    volumes:
      - /dev/:/dev/
    env:
      OSD_DEVICE: "{{ item.path }}"
    privileged: yes
    command: zap_device
  loop: "{{ device_prepare }}"
  
- name: delete ceph_zap docker container
  docker_container:
    name: "ceph_zap_{{ item.name }}"
    state: absent
    image: "{{image_address}}"
  loop: "{{ device_prepare }}"
  
- name: clean file
  command: "rm -r /var/lib/ceph /var/run/ceph /var/log/ceph /etc/ceph"
  ignore_errors: yes
  when: clean_old_ceph
