---

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/glance/"
    state: directory

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/glance/{{ item }}/"
    state: directory
  with_items:
    - backup
    - glance
    - ceph
    - sudoers.d
    - ssl

- name: Get list server's IPs
  set_fact: ips=["{{ groups['volume'] | map('extract', hostvars, ['ansible_ssh_host']) | join('", "') }}"]

- name: Get list hostnames
  set_fact: hostnames="{{ groups['volume'] }}"

- name: Create dict with hostname and correspond IP
  set_fact: hosts={{ ips | get_hosts(hostnames) }}

- name: Config glance-registry
  template: src=glance-registry.conf.j2 dest="{{ docker_shared_conf_dir }}/glance/glance/glance-registry.conf" backup=yes

- name: Config glance-api (file system as backend storage)
  template: src="glance-api.conf.fs.j2" dest="{{ docker_shared_conf_dir }}/glance/glance/glance-api.conf" backup=yes
  when: (ceph.glance.enabled == 0) and (glance_env.SSL_ENABLED == 0)

- name: Config glance-api (ceph as backend storage)
  template: src="glance-api.conf.ceph.j2" dest="{{ docker_shared_conf_dir }}/glance/glance/glance-api.conf" backup=yes
  when: (ceph.glance.enabled == 1) and (glance_env.SSL_ENABLED == 0)

- name: Config glance-api (file system as backend storage)
  template: src="ssl.glance-api.conf.fs.j2" dest="{{ docker_shared_conf_dir }}/glance/glance/glance-api.conf" backup=yes
  when: (ceph.glance.enabled == 0) and (glance_env.SSL_ENABLED == 1)

- name: Config glance-api (ceph as backend storage)
  template: src="ssl.glance-api.conf.ceph.j2" dest="{{ docker_shared_conf_dir }}/glance/glance/glance-api.conf" backup=yes
  when: (ceph.glance.enabled == 1) and (glance_env.SSL_ENABLED == 1)

- name: Config ceph as backend storage for glance
  include_role:
    name: glance 
    tasks_from: ceph 
  when: ceph.glance.enabled == 1

- name: Distribute certs
  copy: src="{{ playbook_dir }}/roles/openstack-client/files/{{ item }}" dest="{{ docker_shared_conf_dir }}/glance/ssl/{{ item }}" backup=yes
  with_items:
    - openstack.crt
    - openstack.key
  when: glance_env.SSL_ENABLED == 1
