---

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/gnocchi/"
    state: directory

- name: Create shared configuration directory
  file:
    path: "{{ docker_shared_conf_dir }}/gnocchi/{{ item }}/"
    state: directory
  with_items:
    - backup
    - gnocchi
    - sudoers.d
    - cgi-bin
    - apache2
    - ceph
    - logrotate.d
    - ssl

- name: Config gnocchi-api logrotate 
  template: src=gnocchi.logrotate.j2 dest="{{ docker_shared_conf_dir }}/gnocchi/logrotate.d/gnocchi-api.logrotate" backup=yes
  vars:
    component: gnocchi-api

- name: Config gnocchi-metricd logrotate
  template: src=gnocchi.logrotate.j2 dest="{{ docker_shared_conf_dir }}/gnocchi/logrotate.d/gnocchi-metricd.logrotate" backup=yes
  vars:
    component: gnocchi-metricd

- name: Config gnocchi (file system as backend storage)
  template: src="gnocchi.conf.fs.j2" dest="{{ docker_shared_conf_dir }}/gnocchi/gnocchi/gnocchi.conf" backup=yes
  when: (ceph.gnocchi.enabled == 0) and (gnocchi_env.SSL_ENABLED == 0)

- name: Config gnocchi (file system as backend storage)
  template: src="ssl.gnocchi.conf.fs.j2" dest="{{ docker_shared_conf_dir }}/gnocchi/gnocchi/gnocchi.conf" backup=yes
  when: (ceph.gnocchi.enabled == 0) and (gnocchi_env.SSL_ENABLED == 1)


- name: Config sudoer
  template: src=gnocchi_sudoers.j2 dest="{{ docker_shared_conf_dir }}/gnocchi/sudoers.d/gnocchi_sudoers" backup=yes

- name: Config app wsgi 
  template: src=app.wsgi.j2 dest="{{ docker_shared_conf_dir }}/gnocchi/cgi-bin/gnocchi-api" backup=yes

- name: Configure apache2
  template: src=gnocchi-api.conf.j2 dest="{{ docker_shared_conf_dir }}/gnocchi/apache2/gnocchi-api.conf" backup=yes

- include_role:
    name: keystone
    tasks_from: config-gnocchi

- name: Distribute certs
  copy: src="{{ playbook_dir }}/roles/openstack-client/files/{{ item }}" dest="{{ docker_shared_conf_dir }}/gnocchi/ssl/{{ item }}" backup=yes
  with_items:
    - openstack.crt
    - openstack.key
  when: gnocchi_env.SSL_ENABLED == 1
