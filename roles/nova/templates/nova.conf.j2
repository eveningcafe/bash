[DEFAULT]
debug = false
state_path = /var/lib/nova
log_dir = /var/log/nova
my_ip = {{ ansible_all_ipv4_addresses | ipaddr(management_net) | first }}  
enabled_apis=osapi_compute,metadata
osapi_compute_listen_port = 8774
metadata_listen_port = 8775
firewall_driver = nova.virt.firewall.NoopFirewallDriver

osapi_compute_unique_server_name_scope = global

transport_url = rabbit://{% for controller in groups['controller'] %}openstack:{{ rabbit_passwd }}@{{ controller }}:5672{% if not loop.last %},{% endif %}{% endfor %}

allow_resize_to_same_host = True

# OVERCOMMIT
ram_allocation_ratio = {{ OVERCOMMIT_RATIO.RAM }}
cpu_allocation_ratio = {{ OVERCOMMIT_RATIO.CPU }}

# CEILOMETER CONFIGURATION
#instance_usage_audit = True
#instance_usage_audit_period = hour
#notify_on_state_change = vm_and_task_state

{% if DPDK.ENABLED %}
# RESERVED MEMORY
reserved_host_memory_mb = {{ dpdk_config.reserved_mem }}

# CPU PIN SET
#vcpu_pin_set = {{ dpdk_config.cpu_set }}
{% else %}
# RESERVED MEMORY
reserved_host_memory_mb = {{ system_config.reserved_mem }}

# CPU PIN SET
#vcpu_pin_set = {{ system_config.cpu_set }}
{% endif %}

# SYNC POWER STATE CONFIG
#sync_power_state_interval = -1
#image_cache_manager_interval = -1

# INSTANCE NAME TEMPLATE
instance_name_template = "%(hostname)s"

[api_database]
connection = mysql+pymysql://nova:{{ nova_dbpass }}@{{ mysql_host }}/nova_api
max_retries = -1

[database]
connection = mysql+pymysql://nova:{{ nova_dbpass }}@{{ mysql_host }}/nova
max_pool_size = 50
max_overflow = 1000
max_retries = -1

[api]
auth_strategy = keystone

[keystone_authtoken]
auth_uri = http://{{ services_controller }}:5000
auth_url = http://{{ services_controller }}:35357
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = {{ nova_pass }}
memcached_servers = {% for controller in groups['controller'] %}{{ controller }}:11211{% if not loop.last %},{% endif %}{% endfor %} 

[placement]
auth_url = http://{{ services_controller }}:35357/v3
auth_type = password
os_region_name = North_VN
project_domain_name = Default
user_domain_name = Default
project_name = service
username = placement
password = {{ placement_pass }}

[neutron]
url = http://{{ services_controller }}:9696
auth_url = http://{{ services_controller }}:35357
auth_type = password
region_name = North_VN
project_domain_name = Default
user_domain_name = Default
project_name = service
username = neutron
password = {{ neutron_pass }}
service_metadata_proxy = true
metadata_proxy_shared_secret = {{ metadata_secret }}

[cache]
backend = oslo_cache.memcache_pool
enabled = true
memcache_servers = {% for controller in groups['controller'] %}{{ controller }}:11211{% if not loop.last %},{% endif %}{% endfor %} 

[cinder]
os_region_name = {{ general_env.REGION_NAME }}
cross_az_attach = False

[glance]
api_servers = http://{{ services_controller }}:9292

[cells]
enable = false

[crypto]
keys_path = /var/lib/nova/keys

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[wsgi]
api_paste_config=/etc/nova/api-paste.ini

[vnc]
enabled = true
novncproxy_host = $my_ip
novncproxy_port = 6080
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = $my_ip
novncproxy_base_url = http://{{ vip.haproxy.ip }}:6080/vnc_auto.html

[libvirt]
disk_cachemodes = file=directsync,block=none,network=writeback
#{% if libvirt_config is not none %}
#cpu_mode = {{ libvirt_config.cpu_mode }}
#cpu_model = {{ libvirt_config.cpu_model }} 
#{% endif %}

[oslo_messaging_notifications]
driver = messagingv2

[filter_scheduler]
enabled_filters = RetryFilter,AvailabilityZoneFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter,AggregateMultiTenancyIsolation
